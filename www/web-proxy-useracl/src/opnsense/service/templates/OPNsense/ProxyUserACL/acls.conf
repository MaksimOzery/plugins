{% set children = [] %}
{% if helpers.exists('OPNsense.proxy.forward.authentication.children') %}
{%      do children.append('children-max=' ~ OPNsense.proxy.forward.authentication.children) %}
{% else %}
{%      do children.append('children-max=5') %}
{% endif %}
{% if helpers.exists('OPNsense.ProxyUserACL.general.Domains.Domain') %}
{%      for Domain in helpers.toList('OPNsense.ProxyUserACL.general.Domains.Domain') %}
{%          set domains_list = [] %}
{%          for element in Domain.Names.split(",") %}
{%              if '^' in element or '\\' in element or '$' in element or '[' in element or Domain.Regexp == '0'  %}
{%                  do domains_list.append(element|encode_idna) %}
{%              else %}
{%                  do domains_list.append(element|encode_idna|replace(".","\.")) %}
{%              endif %}
{%          endfor %}
{%          for domain in domains_list %}
{%              if Domain.Regexp == '1' %}
acl domains_{{Domain.id}} url_regex {{ domain }}
{%                  if helpers.exists('OPNsense.proxy.forward.sslbump') and OPNsense.proxy.forward.sslbump == '1' %}
acl domains_ssl_{{Domain.id}} ssl::server_name_regex {{ domain }}
{%                  endif %}
{%              else %}
acl domains_{{Domain.id}} dstdomain {{ domain }}
{%                  if helpers.exists('OPNsense.proxy.forward.sslbump') and OPNsense.proxy.forward.sslbump == '1' %}
acl domains_ssl_{{Domain.id}} ssl::server_name {{ domain }}
{%                  endif %}
{%              endif %}
{%          endfor %}
deny_info ERR_USERACL_DOMAIN_ACCESS_DENIED domains_{{ Domain.id }}
{%      endfor %}
{% endif %}

{% if helpers.exists('OPNsense.ProxyUserACL.general.remoteACLs.remoteACL') %}
{%      for remoteACL in helpers.toList('OPNsense.ProxyUserACL.general.remoteACLs.remoteACL') %}
{%          if helpers.exists('OPNsense.proxy.forward.sslbump') and OPNsense.proxy.forward.sslbump == '1' and remoteACL.Type == 'dstdomain' %}
acl remote_{{remoteACL.id}} ssl::server_name "/usr/local/etc/squid/acl/{{remoteACL.filename}}"
{%          else %}
acl remote_{{remoteACL.id}} {{remoteACL.Type}} "/usr/local/etc/squid/acl/{{remoteACL.filename}}"
{%          endif %}
deny_info ERR_REMOTEBLACKLIST_ACCESS_DENIED remote_{{ remoteACL.id }}
{%      endfor %}
{% endif %}

{% if helpers.exists('OPNsense.ProxyUserACL.general.Agents.Agent') %}
{%      for Agent in helpers.toList('OPNsense.ProxyUserACL.general.Agents.Agent') %}
{%          for element in Agent.Names.split(",") %}
acl agents_{{Agent.id}} browser {{ element }}
{%          endfor %}
deny_info ERR_USERACL_AGENT_ACCESS_DENIED agents_{{ Agent.id }}
{%      endfor %}
{% endif %}

{% if helpers.exists('OPNsense.ProxyUserACL.general.Times.Time') %}
{%      for Time in helpers.toList('OPNsense.ProxyUserACL.general.Times.Time') %}
{%          set days_list = [] %}
{%          if helpers.exists('Time.Days') %}
{%              for Day in Time.Days.split(",") %}
{%                  do days_list.append(Day) %}
{%              endfor %}
{%          endif %}
acl times_{{Time.id}} time {{ days_list|join("") ~ ' ' ~ Time.Start ~ '-' ~ Time.End }}
deny_info ERR_USERACL_TIME_ACCESS_DENIED times_{{ Time.id }}
{%      endfor %}
{% endif %}

{% if helpers.exists('OPNsense.ProxyUserACL.general.Mimes.Mime') %}
{%      for Mime in helpers.toList('OPNsense.ProxyUserACL.general.Mimes.Mime') %}
{%          for element in Mime.Names.split(",") %}
acl mimes_req_{{Mime.id}} req_mime_type {{ element }}
acl mimes_rep_{{Mime.id}} rep_mime_type {{ element }}
{%          endfor %}
deny_info ERR_USERACL_MIME_ACCESS_DENIED mimes_req_{{ Mime.id }}
deny_info ERR_USERACL_MIME_ACCESS_DENIED mimes_rep_{{ Mime.id }}
{%      endfor %}
{% endif %}

{% if helpers.exists('OPNsense.ProxyUserACL.general.Srcs.Src') %}
{%      for Src in helpers.toList('OPNsense.ProxyUserACL.general.Srcs.Src') %}
{%          for element in Src.Names.split(",") %}
acl srcs_{{Src.id}} src {{ element }}
{%          endfor %}
deny_info ERR_USERACL_SRC_ACCESS_DENIED srcs_{{ Src.id }}
{%      endfor %}
{% endif %}

{% if helpers.exists('OPNsense.ProxyUserACL.general.Dsts.Dst') %}
{%      for Dst in helpers.toList('OPNsense.ProxyUserACL.general.Dsts.Dst') %}
{%          for element in Dst.Names.split(",") %}
acl dsts_{{Dst.id}} dst {{ element }}
{%          endfor %}
deny_info ERR_USERACL_DST_ACCESS_DENIED dsts_{{ Dst.id }}
{%      endfor %}
{% endif %}

{% if helpers.exists('OPNsense.ProxyUserACL.general.Arps.Arp') %}
{%      for Arp in helpers.toList('OPNsense.ProxyUserACL.general.Arps.Arp') %}
{%          for element in Arp.Names.split(",") %}
acl arps_{{Arp.id}} arp {{ element|lower|replace("-",":") }}
{%          endfor %}
deny_info ERR_USERACL_ARP_ACCESS_DENIED arps_{{ Arp.id }}
{%      endfor %}
{% endif %}

{% if helpers.exists('OPNsense.ProxyUserACL.general.Users.User') and helpers.exists('OPNsense.proxy.forward.authentication.method') %}
{%      for User in helpers.toList('OPNsense.ProxyUserACL.general.Users.User') %}
{%          for method in OPNsense.proxy.forward.authentication.method.split(",") %}
{%              if method == User.Server %}
{%                  if method == "Local Database" %}
# {{method}}
{%                      if User.Group == "group" %}
external_acl_type ext_group_local_{{ User.id }} {{ children[0] }} ttl=300 negative_ttl=60 %LOGIN /usr/local/libexec/squid/ext_unix_group_acl -p
acl group_{{User.id}} external ext_group_local_{{ User.id }} "/usr/local/etc/squid/ACL_useracl_{{ User.id }}.txt"
deny_info ERR_USERACL_ACCESS_DENIED group_{{User.id}}
{%                      else %}
acl user_{{User.id}} proxy_auth "/usr/local/etc/squid/ACL_useracl_{{ User.id }}.txt"
deny_info ERR_USERACL_ACCESS_DENIED user_{{User.id}}
{%                      endif%}
{%                  else %}
{%                      for server in helpers.toList('system.authserver') %}
{%                          if server.name == User.Server %}

# {{method}}
{%                              if server.type == 'ldap' %}
{%                                  set domain = [] %}
{%                                  for element in server.ldap_basedn.split(",") %}
{%                                      do domain.append(element.split("=")[1]) %}
{%                                  endfor %}
{%                                  if User.Group == "group" %}
{%                                      if helpers.exists('OPNsense.ProxySSO.EnableSSO') and OPNsense.ProxySSO.EnableSSO == '1' %}
external_acl_type ext_group_ldap_{{ User.id}} {{ children[0] }} ttl=300 negative_ttl=60 %LOGIN /usr/local/libexec/squid/ext_kerberos_ldap_group_acl -a -t {{ User.Hex }} -D {{ domain|join(".")|upper }} -S {{server.host}}
acl group_{{User.id}} external ext_group_ldap_{{ User.id }}
deny_info ERR_USERACL_ACCESS_DENIED group_{{User.id}}
{%                                      elif helpers.exists('OPNsense.ProxyNTLM.EnableSSO') and OPNsense.ProxyNTLM.EnableNTLM == '1' %}
external_acl_type ext_group_ntlm_{{ User.id }} {{ children[0] }} ttl=300 negative_ttl=60 %LOGIN /usr/local/opnsense/scripts/OPNsense/ProxyNTLM/group_acl.py
acl group_{{User.id}} external ext_group_ntlm_{{ User.id }} "/usr/local/etc/squid/ACL_useracl_{{ User.id }}.txt"
deny_info ERR_USERACL_ACCESS_DENIED group_{{User.id}}
{%                                      else %}
{%                                          set containers = [] %}
{%                                          for authcn in server.ldap_authcn.split(";") %}
{%                                              do containers.append("(memberOf=cn=%a," ~ authcn ~ ")") %}
{%                                          endfor %}
{%                                          if server.ldap_attr_user in ['cn', 'uid'] %}
external_acl_type ext_ldap_{{ User.id }} {{ children[0] }} ttl=300 negative_ttl=60 %LOGIN /usr/local/libexec/squid/ext_ldap_group_acl -R -b "{{server.ldap_basedn}}" -f "(&(cn=%a)(memberUid=%u))" -D "{{server.ldap_binddn}}" -w "{{server.ldap_bindpw}}" -p "{{server.ldap_port}}" "{{server.host}}"
{%                                          else %}
external_acl_type ext_ldap_{{ User.id }} {{ children[0] }} ttl=300 negative_ttl=60 %LOGIN /usr/local/libexec/squid/ext_ldap_group_acl -R -b "{{server.ldap_basedn}}" -f "(&({{server.ldap_attr_user}}=%u)(|{{containers|join("")}}))" -D "{{server.ldap_binddn}}" -w "{{server.ldap_bindpw}}" -p "{{server.ldap_port}}" "{{server.host}}"
{%                                          endif %}
acl group_{{User.id}} external ext_ldap_{{ User.id }} "/usr/local/etc/squid/ACL_useracl_{{ User.id }}.txt"
deny_info ERR_USERACL_ACCESS_DENIED group_{{User.id}}
{%                                      endif %}
{%                                  else %}
acl user_{{User.id}} proxy_auth "/usr/local/etc/squid/ACL_useracl_{{ User.id }}.txt"
deny_info ERR_USERACL_ACCESS_DENIED user_{{User.id}}
{%                                  endif %}
{%                              endif %}
{%                              break %}
{%                          endif %}
{%                      endfor %}
{%                  endif %}
{%              endif %}
{%          endfor %}
{%      endfor %}
{% endif %}
